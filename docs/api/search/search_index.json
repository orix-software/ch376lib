{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>This lib is used to manage ch376 chip for 6502 cpu</p>"},{"location":"assembly/","title":"Assembly","text":""},{"location":"assembly/#assembly","title":"Assembly","text":""},{"location":"assembly/#ch376_check_exist","title":"ch376_check_exist","text":"<p>Description</p> <p>If ch376 is present, it will return $AA</p> <p>Modify</p> <ul> <li>Accumulator </li> </ul> <p>Returns</p> <ul> <li>Accumulator : $AA if it's OK</li> </ul> <p>Example</p> <pre><code> jsr ch376_check_exist\ncmp #$AA\nbeq @exists\nrts ; Does not exist\n@exists:\n...\n</code></pre>"},{"location":"assembly/#ch376_dir_create","title":"ch376_dir_create","text":"<p>Description</p> <p>create a folder</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register From ch376_wait_response_call</li> <li>Y Register From ch376_wait_response_call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 status values</li> </ul> <p>Example</p> <pre><code> jsr ch376_dir_create\n; check accumulator here ch376_wait_response had been launched by ch376_dir_create\n</code></pre>"},{"location":"assembly/#ch376_disk_capacity","title":"ch376_disk_capacity","text":"<p>Description</p> <p>check disk capacity</p> <p>Impossible to use</p>"},{"location":"assembly/#ch376_disk_mount","title":"ch376_disk_mount","text":"<p>Description</p> <p>perform a disk mount</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register From ch376_wait_response_call</li> <li>Y Register From ch376_wait_response_call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 status values</li> </ul> <p>Example</p> <pre><code> jsr ch376_disk_mount\n; check accumulator here ch376_wait_response had been launched by ch376_disk_mount\n</code></pre>"},{"location":"assembly/#ch376_disk_query","title":"ch376_disk_query","text":"<p>Impossible to use</p>"},{"location":"assembly/#ch376_file_close","title":"ch376_file_close","text":"<p>Description</p> <p>Close file</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register From ch376_wait_response_call</li> <li>Y Register From ch376_wait_response_call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : 'ch376 status' value</li> </ul> <p>Example</p> <pre><code> jsr ch376_file_close\n; check accumulator here ch376_wait_response had been launched by ch376_file_close\n</code></pre>"},{"location":"assembly/#ch376_file_create","title":"ch376_file_create","text":"<p>Description</p> <p>create file</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register From ch376_wait_response_call</li> <li>Y Register From ch376_wait_response_call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 status value</li> </ul> <p>Example</p> <pre><code> jsr ch376_file_create\n; check accumulator here ch376_wait_response had been launched by ch376_file_create\n</code></pre>"},{"location":"assembly/#ch376_file_erase","title":"ch376_file_erase","text":"<p>Description</p> <p>Erase file</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register From ch376_wait_response_call</li> <li>Y Register From ch376_wait_response_call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 status value</li> </ul> <p>Example</p> <pre><code> jsr ch376_file_erase\n; Check accumulator here :\n; Ch376_wait_response had been launched\n; By ch376_file_erase\n</code></pre>"},{"location":"assembly/#ch376_file_open","title":"ch376_file_open","text":"<p>Description</p> <p>open file</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register From ch376_wait_response_call</li> <li>Y Register From ch376_wait_response_call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : 'ch376 status' value</li> </ul> <p>Example</p> <pre><code> jsr ch376_file_erase\n; check accumulator here ch376_wait_response had been launched by ch376_file_open\nrts\n</code></pre>"},{"location":"assembly/#ch376_get_descr","title":"ch376_get_descr","text":"<p>Description</p> <p>Get usb descr device</p> <p>Modify</p> <ul> <li>X Register </li> <li>Y Register From ch376_wait_response_call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 status values</li> </ul> <p>Example</p> <pre><code> jsr ch376_get_descr\n; check accumulator here ch376_wait_response had been launched by ch376_get_descr\nrts\n</code></pre>"},{"location":"assembly/#ch376_get_file_size","title":"ch376_get_file_size","text":"<p>Description</p> <p>Get file size</p> <p>Impossible to use</p>"},{"location":"assembly/#ch376_ic_get_ver","title":"ch376_ic_get_ver","text":"<p>Description</p> <p>Get ch376 firmware version</p> <p>Modify</p> <ul> <li>Accumulator </li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 firmware version</li> </ul> <p>Example</p> <pre><code> jsr ch376_ic_get_ver\n; check accumulator for Version (integer value)\n</code></pre>"},{"location":"assembly/#ch376_issue_token_x","title":"ch376_issue_token_x","text":"<p>Description</p> <p>Send Token for control transfert</p> <p>Input</p> <ul> <li>Accumulator : ch376 Token</li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register From ch376_wait_response</li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 status</li> </ul> <p>Example</p> <pre><code> lda #$80\njsr ch376_issue_token_x\n; check accumulator for ch376 status\n</code></pre>"},{"location":"assembly/#ch376_lib_version","title":"ch376_lib_version","text":"<p>Description</p> <p>Get lib version</p> <p>Modify</p> <ul> <li>Accumulator </li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 lib version</li> </ul> <p>Example</p> <pre><code> jsr ch376_lib_version\ncmp #CH376_LIB_VERSION_2024_2\nbeq @right_version\n; Wrong version\n...\nrts\n@right_version:\n...\nrts\n</code></pre>"},{"location":"assembly/#ch376_reset_all","title":"ch376_reset_all","text":"<p>Description</p> <p>reset CH376</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul> <p>Example</p> <pre><code> jsr ch376_reset_all\nrts\n</code></pre>"},{"location":"assembly/#ch376_seek_file","title":"ch376_seek_file","text":"<p>Description</p> <p>Seek file. Performs a wait_response</p> <p>Input</p> <ul> <li>Accumulator : First byte</li> <li>Y Register : second byte</li> <li>X Register : third byte byte</li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register from ch376_wait_response call</li> <li>Y Register from ch376_wait_response call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 status values</li> </ul> <p>Example</p> <pre><code> lda #$04\nsta RES\nlda #$01\nldy #$02\nldx #$03\njsr ch376_seek_file\n; check accumulator here ch376_wait_response had been launched by ch376_seek_file\n</code></pre> <p>Not tested</p>"},{"location":"assembly/#ch376_set_address","title":"ch376_set_address","text":"<p>Description</p> <p>set usb address</p> <p>Modify</p> <ul> <li>X Register </li> </ul> <p>Example</p> <pre><code> lda #$02\njsr ch376_set_address\n</code></pre> <p>endproc proc ch376_set_bytes_read    ;;@brief Set bytes to read. Manage only 16 bits. Others bytes are set to 0 to provide 32 bits integer to ch376 chip    ;;@inputA       Low value    ;;@inputY       High value    ;;@modifyX    ;;@modifyA    ;;@<code>ca65    ;;@`  lda       #$02    ;;@`  ldy       #$10    ;;@`  jsr       ch376_set_bytes_read    ;;@</code>    ldx     #CH376_BYTE_READ    .byt     $2C                ; jump 2 bytes with the hack bit $xxxx rite_entry_point:    ldx     #CH376_BYTE_WRITE    stx     CH376_COMMAND    sta     CH376_DATA    sty     CH376_DATA IFPC02 pc02    stz     CH376_DATA    stz     CH376_DATA p02 else    lda     #$00    sta     CH376_DATA    sta     CH376_DATA endif    jmp     _ch376_wait_response endproc proc ch376_set_bytes_write    ;;@brief Set bytes to write. Manage only 16 bits. Others bytes are set to 0 to provide 32 bits integer to ch376 chip    ;;@inputA       Low value    ;;@inputY       High value    ;;@modifyX    ;;@modifyA    ;;@<code>ca65    ;;@`  lda       #$02    ;;@`  ldy       #$10    ;;@`  jsr       ch376_set_bytes_write    ;;@</code>    jmp     ch376_set_bytes_read::write_entry_point endproc</p>"},{"location":"assembly/#ch376_set_config","title":"ch376_set_config","text":"<p>Description</p> <p>set config for usb device</p> <p>Input</p> <ul> <li>Accumulator : config value</li> </ul> <p>Modify</p> <ul> <li>X Register </li> </ul> <p>Example</p> <pre><code> lda #$02\njsr ch376_set_config\n</code></pre>"},{"location":"assembly/#ch376_set_file_name","title":"ch376_set_file_name","text":"<p>Description</p> <p>set file_name</p> <p>Input</p> <ul> <li>Accumulator : Low ptr adress of the string, terminated by 0</li> <li>Y Register : High ptr adress of the string, terminated by 0</li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>Y Register </li> </ul> <p>Example</p> <pre><code> lda #&lt;myfile\nldy #&gt;myfile\njsr ch376_set_file_name\nrts\nmyfile:\n.byte \"hello.txt\"\n</code></pre>"},{"location":"assembly/#ch376_set_usb_addr","title":"ch376_set_usb_addr","text":"<p>Description</p> <p>set usb_address</p> <p>Input</p> <ul> <li>Accumulator : The address to set</li> </ul> <p>Modify</p> <ul> <li>X Register </li> </ul> <p>Example</p> <pre><code>; Set usb addr\nlda #$02\njsr ch376_set_usb_addr\nrts\n</code></pre>"},{"location":"assembly/#ch376_set_usb_mode","title":"ch376_set_usb_mode","text":"<p>Description</p> <p>Set usb mode</p> <p>Input</p> <ul> <li>Accumulator : The usb mode to set</li> </ul> <p>Modify</p> <ul> <li>X Register </li> </ul> <p>Example</p> <pre><code> lda #CH376_USB_MODE_HOST_RESET\njsr ch376_set_usb_mode\nrts\n</code></pre>"},{"location":"assembly/#ch376_set_usb_speed","title":"ch376_set_usb_speed","text":"<p>Description</p> <p>Set usb mode</p> <p>Input</p> <ul> <li>Accumulator : The speed for usb</li> </ul> <p>Modify</p> <ul> <li>X Register </li> </ul> <p>Example</p> <pre><code> lda #$02\njsr ch376_set_usb_speed\nrts\n</code></pre>"},{"location":"assembly/#ch376_wait_response","title":"ch376_wait_response","text":"<p>Description</p> <p>Perform wait_response. It's not needed to call because some commands already perform ch376_wait_response</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul> <p>Returns</p> <ul> <li>Accumulator : \"ch376 status\" value (or return 1 if usb controller does not respond)</li> </ul> <p>Example</p> <pre><code> jsr ch376_wait_response\nrts\n</code></pre>"},{"location":"assembly/#ch376_wr_usb_data","title":"ch376_wr_usb_data","text":"<p>Description</p> <p>Send data to usb device. First byte must be the the length to send</p> <p>Input</p> <ul> <li>Accumulator : Low byte of ptr data</li> <li>X Register : High byte of ptr data</li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>Y Register </li> <li>X Register </li> </ul> <p>Example</p> <pre><code> lda #&lt;data\nldx #&gt;data\njsr ch376_wr_usb_data\nrts\ndata:\n; length, set port feature, set feature, port_power,0, Id port, 0, 0, 0\n.byte 8,$23,3,8,0,1,0,0\n</code></pre>"},{"location":"c/","title":"C","text":""},{"location":"c/#c","title":"C","text":""},{"location":"c/#unsigned-char-ch376_check_existvoid","title":"unsigned char ch376_check_exist(void);","text":"<p>Description</p> <p>If ch376 is present, it will return 0XAA</p> <p>Returns</p> <p>0XAA if it's OK</p>"},{"location":"c/#unsigned-char-ch376_dir_create","title":"unsigned char ch376_dir_create();","text":"<p>Description</p> <p>create a folder</p>"},{"location":"c/#ch376_disk_capacity","title":"ch376_disk_capacity();","text":"<p>Description</p> <p>check disk capacity</p> <p>Impossible to use</p>"},{"location":"c/#unsigned-char-ch376_disk_mountvoid","title":"unsigned char ch376_disk_mount(void);","text":"<p>Description</p> <p>perform a disk mount</p> <p>Returns</p> <p>ch376 status values</p>"},{"location":"c/#void-ch376_disk_queryvoid","title":"void ch376_disk_query(void);","text":"<p>Impossible to use</p>"},{"location":"c/#unsigned-char-ch376_file_close","title":"unsigned char ch376_file_close();","text":"<p>Returns</p> <p>ch376 status values</p>"},{"location":"c/#unsigned-char-ch376_dir_create_1","title":"unsigned char ch376_dir_create();","text":"<p>Description</p> <p>create file</p> <p>Returns</p> <p>ch376 status values</p>"},{"location":"c/#unsigned-char-ch376_file_erase","title":"unsigned char ch376_file_erase();","text":"<p>Description</p> <p>erase file</p> <p>Returns</p> <p>ch376 status value</p>"},{"location":"c/#unsigned-char-ch376_file_openvoid","title":"unsigned char ch376_file_open(void);","text":"<p>Description</p> <p>open file</p> <p>Returns</p> <p>'ch376 status' value</p>"},{"location":"c/#unsigned-char-ch376_get_descrunsigned-char-mode","title":"unsigned char ch376_get_descr(unsigned char mode);","text":"<p>Description</p> <p>Get usb descr device</p> <p>Returns</p> <p>ch376 status values</p>"},{"location":"c/#void-ch376_get_file_sizevoid","title":"void ch376_get_file_size(void);","text":"<p>Impossible to use</p>"},{"location":"c/#unsigned-char-ch376_ic_get_versionvoid","title":"unsigned char ch376_ic_get_version(void);","text":"<p>Description</p> <p>Get ch376 firmware version</p> <p>Returns</p> <p>ch376 firmware version</p>"},{"location":"c/#void-ch376_issue_token_xunsigned-char-token","title":"void ch376_issue_token_x(unsigned char token)","text":"<p>Description</p> <p>Send Token for control transfert</p>"},{"location":"c/#unsigned-char-ch376_lib_versionvoid","title":"unsigned char ch376_lib_version(void);","text":"<p>Description</p> <p>Get lib version</p> <p>Returns</p> <p>ch376 lib version</p>"},{"location":"c/#void-ch376_reset_allvoid","title":"void ch376_reset_all(void);","text":"<p>Description</p> <p>reset CH376</p>"},{"location":"c/#unsigned-int-ch376_seek_filelong-position","title":"unsigned int ch376_seek_file(long position);","text":"<p>Description</p> <p>Seek file</p> <p>Returns</p> <p>ch376 status values</p>"},{"location":"c/#void-ch376_set_addressunsigned-char-adress","title":"void ch376_set_address(unsigned char adress);","text":"<p>Description</p> <p>set usb address</p>"},{"location":"c/#void-ch376_set_bytes_writeunsigned-int-nb","title":"void ch376_set_bytes_write(unsigned int nb);","text":""},{"location":"c/#void-ch376_set_bytes_readunsigned-int-nb","title":"void ch376_set_bytes_read(unsigned int nb);","text":""},{"location":"c/#void-ch376_set_configunsigned-char-config","title":"void ch376_set_config(unsigned char config);","text":"<p>Description</p> <p>set config for usb device</p>"},{"location":"c/#void-ch376_set_file_namechar-filename","title":"void ch376_set_file_name(char *filename);","text":"<p>Description</p> <p>set file_name</p>"},{"location":"c/#void-ch376_set_usb_addrunsigned-char-adress","title":"void ch376_set_usb_addr(unsigned char adress);","text":"<p>Description</p> <p>set usb_address</p>"},{"location":"c/#void-ch376_set_usb_modeunsigned-char-mode","title":"void ch376_set_usb_mode(unsigned char mode);","text":"<p>Description</p> <p>Set usb mode</p> <p>Input</p>"},{"location":"c/#void-ch376_set_usb_speedunsigned-char-speed","title":"void ch376_set_usb_speed(unsigned char speed);","text":"<p>Description</p> <p>Set usb mode</p> <p>Input</p>"},{"location":"c/#unsigned-char-ch376_wait_responsevoid","title":"unsigned char ch376_wait_response(void);","text":"<p>Description</p> <p>Perform wait_response</p> <p>Returns</p> <p>\"ch376 status\" values</p>"},{"location":"c/#void-ch376_wr_usb_datachar-data","title":"void ch376_wr_usb_data(char *data);","text":"<p>Description</p> <p>Send data to usb device. First byte must be the the length to send</p>"},{"location":"2024.2/assembly/","title":"Assembly","text":""},{"location":"2024.2/assembly/#assembly","title":"Assembly","text":""},{"location":"2024.2/assembly/#ch376_check_exist","title":"ch376_check_exist","text":"<p>Description</p> <p>If ch376 is present, it will return $AA</p> <p>Modify</p> <ul> <li>Accumulator </li> </ul> <p>Returns</p> <ul> <li>Accumulator : $AA if it's OK</li> </ul> <p>Example</p> <pre><code> jsr ch376_check_exist\ncmp #$AA\nbeq @exists\nrts ; Does not exist\n@exists:\n...\n</code></pre>"},{"location":"2024.2/assembly/#ch376_dir_create","title":"ch376_dir_create","text":"<p>Description</p> <p>create a folder</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register From ch376_wait_response_call</li> <li>Y Register From ch376_wait_response_call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 status values</li> </ul> <p>Example</p> <pre><code> jsr ch376_dir_create\n; check accumulator here ch376_wait_response had been launched by ch376_dir_create\n</code></pre>"},{"location":"2024.2/assembly/#ch376_disk_capacity","title":"ch376_disk_capacity","text":"<p>Description</p> <p>check disk capacity</p> <p>Impossible to use</p>"},{"location":"2024.2/assembly/#ch376_disk_mount","title":"ch376_disk_mount","text":"<p>Description</p> <p>perform a disk mount</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register From ch376_wait_response_call</li> <li>Y Register From ch376_wait_response_call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 status values</li> </ul> <p>Example</p> <pre><code> jsr ch376_disk_mount\n; check accumulator here ch376_wait_response had been launched by ch376_disk_mount\n</code></pre>"},{"location":"2024.2/assembly/#ch376_disk_query","title":"ch376_disk_query","text":"<p>Impossible to use</p>"},{"location":"2024.2/assembly/#ch376_file_close","title":"ch376_file_close","text":"<p>Description</p> <p>Close file</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register From ch376_wait_response_call</li> <li>Y Register From ch376_wait_response_call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : 'ch376 status' value</li> </ul> <p>Example</p> <pre><code> jsr ch376_file_close\n; check accumulator here ch376_wait_response had been launched by ch376_file_close\n</code></pre>"},{"location":"2024.2/assembly/#ch376_file_create","title":"ch376_file_create","text":"<p>Description</p> <p>create file</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register From ch376_wait_response_call</li> <li>Y Register From ch376_wait_response_call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 status value</li> </ul> <p>Example</p> <pre><code> jsr ch376_file_create\n; check accumulator here ch376_wait_response had been launched by ch376_file_create\n</code></pre>"},{"location":"2024.2/assembly/#ch376_file_erase","title":"ch376_file_erase","text":"<p>Description</p> <p>Erase file</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register From ch376_wait_response_call</li> <li>Y Register From ch376_wait_response_call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 status value</li> </ul> <p>Example</p> <pre><code> jsr ch376_file_erase\n; Check accumulator here :\n; Ch376_wait_response had been launched\n; By ch376_file_erase\n</code></pre>"},{"location":"2024.2/assembly/#ch376_file_open","title":"ch376_file_open","text":"<p>Description</p> <p>open file</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register From ch376_wait_response_call</li> <li>Y Register From ch376_wait_response_call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : 'ch376 status' value</li> </ul> <p>Example</p> <pre><code> jsr ch376_file_erase\n; check accumulator here ch376_wait_response had been launched by ch376_file_open\nrts\n</code></pre>"},{"location":"2024.2/assembly/#ch376_get_descr","title":"ch376_get_descr","text":"<p>Description</p> <p>Get usb descr device</p> <p>Modify</p> <ul> <li>X Register </li> <li>Y Register From ch376_wait_response_call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 status values</li> </ul> <p>Example</p> <pre><code> jsr ch376_get_descr\n; check accumulator here ch376_wait_response had been launched by ch376_get_descr\nrts\n</code></pre>"},{"location":"2024.2/assembly/#ch376_get_file_size","title":"ch376_get_file_size","text":"<p>Description</p> <p>Get file size</p> <p>Impossible to use</p>"},{"location":"2024.2/assembly/#ch376_ic_get_ver","title":"ch376_ic_get_ver","text":"<p>Description</p> <p>Get ch376 firmware version</p> <p>Modify</p> <ul> <li>Accumulator </li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 firmware version</li> </ul> <p>Example</p> <pre><code> jsr ch376_ic_get_ver\n; check accumulator for Version (integer value)\n</code></pre>"},{"location":"2024.2/assembly/#ch376_issue_token_x","title":"ch376_issue_token_x","text":"<p>Description</p> <p>Send Token for control transfert</p> <p>Input</p> <ul> <li>Accumulator : ch376 Token</li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register From ch376_wait_response</li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 status</li> </ul> <p>Example</p> <pre><code> lda #$80\njsr ch376_issue_token_x\n; check accumulator for ch376 status\n</code></pre>"},{"location":"2024.2/assembly/#ch376_lib_version","title":"ch376_lib_version","text":"<p>Description</p> <p>Get lib version</p> <p>Modify</p> <ul> <li>Accumulator </li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 lib version</li> </ul> <p>Example</p> <pre><code> jsr ch376_lib_version\ncmp #CH376_LIB_VERSION_2024_2\nbeq @right_version\n; Wrong version\n...\nrts\n@right_version:\n...\nrts\n</code></pre>"},{"location":"2024.2/assembly/#ch376_reset_all","title":"ch376_reset_all","text":"<p>Description</p> <p>reset CH376</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul> <p>Example</p> <pre><code> jsr ch376_reset_all\nrts\n</code></pre>"},{"location":"2024.2/assembly/#ch376_seek_file","title":"ch376_seek_file","text":"<p>Description</p> <p>Seek file. Performs a wait_response</p> <p>Input</p> <ul> <li>Accumulator : First byte</li> <li>Y Register : second byte</li> <li>X Register : third byte byte</li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register from ch376_wait_response call</li> <li>Y Register from ch376_wait_response call</li> </ul> <p>Returns</p> <ul> <li>Accumulator : ch376 status values</li> </ul> <p>Example</p> <pre><code> lda #$04\nsta RES\nlda #$01\nldy #$02\nldx #$03\njsr ch376_seek_file\n; check accumulator here ch376_wait_response had been launched by ch376_seek_file\n</code></pre> <p>Not tested</p>"},{"location":"2024.2/assembly/#ch376_set_address","title":"ch376_set_address","text":"<p>Description</p> <p>set usb address</p> <p>Modify</p> <ul> <li>X Register </li> </ul> <p>Example</p> <pre><code> lda #$02\njsr ch376_set_address\n</code></pre> <p>endproc proc ch376_set_bytes_read    ;;@brief Set bytes to read. Manage only 16 bits. Others bytes are set to 0 to provide 32 bits integer to ch376 chip    ;;@inputA       Low value    ;;@inputY       High value    ;;@modifyX    ;;@modifyA    ;;@<code>ca65    ;;@`  lda       #$02    ;;@`  ldy       #$10    ;;@`  jsr       ch376_set_bytes_read    ;;@</code>    ldx     #CH376_BYTE_READ    .byt     $2C                ; jump 2 bytes with the hack bit $xxxx rite_entry_point:    ldx     #CH376_BYTE_WRITE    stx     CH376_COMMAND    sta     CH376_DATA    sty     CH376_DATA IFPC02 pc02    stz     CH376_DATA    stz     CH376_DATA p02 else    lda     #$00    sta     CH376_DATA    sta     CH376_DATA endif    jmp     _ch376_wait_response endproc proc ch376_set_bytes_write    ;;@brief Set bytes to write. Manage only 16 bits. Others bytes are set to 0 to provide 32 bits integer to ch376 chip    ;;@inputA       Low value    ;;@inputY       High value    ;;@modifyX    ;;@modifyA    ;;@<code>ca65    ;;@`  lda       #$02    ;;@`  ldy       #$10    ;;@`  jsr       ch376_set_bytes_write    ;;@</code>    jmp     ch376_set_bytes_read::write_entry_point endproc</p>"},{"location":"2024.2/assembly/#ch376_set_config","title":"ch376_set_config","text":"<p>Description</p> <p>set config for usb device</p> <p>Input</p> <ul> <li>Accumulator : config value</li> </ul> <p>Modify</p> <ul> <li>X Register </li> </ul> <p>Example</p> <pre><code> lda #$02\njsr ch376_set_config\n</code></pre>"},{"location":"2024.2/assembly/#ch376_set_file_name","title":"ch376_set_file_name","text":"<p>Description</p> <p>set file_name</p> <p>Input</p> <ul> <li>Accumulator : Low ptr adress of the string, terminated by 0</li> <li>Y Register : High ptr adress of the string, terminated by 0</li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>Y Register </li> </ul> <p>Example</p> <pre><code> lda #&lt;myfile\nldy #&gt;myfile\njsr ch376_set_file_name\nrts\nmyfile:\n.byte \"hello.txt\"\n</code></pre>"},{"location":"2024.2/assembly/#ch376_set_usb_addr","title":"ch376_set_usb_addr","text":"<p>Description</p> <p>set usb_address</p> <p>Input</p> <ul> <li>Accumulator : The address to set</li> </ul> <p>Modify</p> <ul> <li>X Register </li> </ul> <p>Example</p> <pre><code>; Set usb addr\nlda #$02\njsr ch376_set_usb_addr\nrts\n</code></pre>"},{"location":"2024.2/assembly/#ch376_set_usb_mode","title":"ch376_set_usb_mode","text":"<p>Description</p> <p>Set usb mode</p> <p>Input</p> <ul> <li>Accumulator : The usb mode to set</li> </ul> <p>Modify</p> <ul> <li>X Register </li> </ul> <p>Example</p> <pre><code> lda #CH376_USB_MODE_HOST_RESET\njsr ch376_set_usb_mode\nrts\n</code></pre>"},{"location":"2024.2/assembly/#ch376_set_usb_speed","title":"ch376_set_usb_speed","text":"<p>Description</p> <p>Set usb mode</p> <p>Input</p> <ul> <li>Accumulator : The speed for usb</li> </ul> <p>Modify</p> <ul> <li>X Register </li> </ul> <p>Example</p> <pre><code> lda #$02\njsr ch376_set_usb_speed\nrts\n</code></pre>"},{"location":"2024.2/assembly/#ch376_wait_response","title":"ch376_wait_response","text":"<p>Description</p> <p>Perform wait_response. It's not needed to call because some commands already perform ch376_wait_response</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul> <p>Returns</p> <ul> <li>Accumulator : \"ch376 status\" value (or return 1 if usb controller does not respond)</li> </ul> <p>Example</p> <pre><code> jsr ch376_wait_response\nrts\n</code></pre>"},{"location":"2024.2/assembly/#ch376_wr_usb_data","title":"ch376_wr_usb_data","text":"<p>Description</p> <p>Send data to usb device. First byte must be the the length to send</p> <p>Input</p> <ul> <li>Accumulator : Low byte of ptr data</li> <li>X Register : High byte of ptr data</li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>Y Register </li> <li>X Register </li> </ul> <p>Example</p> <pre><code> lda #&lt;data\nldx #&gt;data\njsr ch376_wr_usb_data\nrts\ndata:\n; length, set port feature, set feature, port_power,0, Id port, 0, 0, 0\n.byte 8,$23,3,8,0,1,0,0\n</code></pre>"},{"location":"2024.2/c/","title":"C","text":""},{"location":"2024.2/c/#c","title":"C","text":""},{"location":"2024.2/c/#unsigned-char-ch376_check_existvoid","title":"unsigned char ch376_check_exist(void);","text":"<p>Description</p> <p>If ch376 is present, it will return 0XAA</p> <p>Returns</p> <p>0XAA if it's OK</p>"},{"location":"2024.2/c/#unsigned-char-ch376_dir_create","title":"unsigned char ch376_dir_create();","text":"<p>Description</p> <p>create a folder</p>"},{"location":"2024.2/c/#ch376_disk_capacity","title":"ch376_disk_capacity();","text":"<p>Description</p> <p>check disk capacity</p> <p>Impossible to use</p>"},{"location":"2024.2/c/#unsigned-char-ch376_disk_mountvoid","title":"unsigned char ch376_disk_mount(void);","text":"<p>Description</p> <p>perform a disk mount</p> <p>Returns</p> <p>ch376 status values</p>"},{"location":"2024.2/c/#void-ch376_disk_queryvoid","title":"void ch376_disk_query(void);","text":"<p>Impossible to use</p>"},{"location":"2024.2/c/#unsigned-char-ch376_file_close","title":"unsigned char ch376_file_close();","text":"<p>Returns</p> <p>ch376 status values</p>"},{"location":"2024.2/c/#unsigned-char-ch376_dir_create_1","title":"unsigned char ch376_dir_create();","text":"<p>Description</p> <p>create file</p> <p>Returns</p> <p>ch376 status values</p>"},{"location":"2024.2/c/#unsigned-char-ch376_file_erase","title":"unsigned char ch376_file_erase();","text":"<p>Description</p> <p>erase file</p> <p>Returns</p> <p>ch376 status value</p>"},{"location":"2024.2/c/#unsigned-char-ch376_file_openvoid","title":"unsigned char ch376_file_open(void);","text":"<p>Description</p> <p>open file</p> <p>Returns</p> <p>'ch376 status' value</p>"},{"location":"2024.2/c/#unsigned-char-ch376_get_descrunsigned-char-mode","title":"unsigned char ch376_get_descr(unsigned char mode);","text":"<p>Description</p> <p>Get usb descr device</p> <p>Returns</p> <p>ch376 status values</p>"},{"location":"2024.2/c/#void-ch376_get_file_sizevoid","title":"void ch376_get_file_size(void);","text":"<p>Impossible to use</p>"},{"location":"2024.2/c/#unsigned-char-ch376_ic_get_versionvoid","title":"unsigned char ch376_ic_get_version(void);","text":"<p>Description</p> <p>Get ch376 firmware version</p> <p>Returns</p> <p>ch376 firmware version</p>"},{"location":"2024.2/c/#void-ch376_issue_token_xunsigned-char-token","title":"void ch376_issue_token_x(unsigned char token)","text":"<p>Description</p> <p>Send Token for control transfert</p>"},{"location":"2024.2/c/#unsigned-char-ch376_lib_versionvoid","title":"unsigned char ch376_lib_version(void);","text":"<p>Description</p> <p>Get lib version</p> <p>Returns</p> <p>ch376 lib version</p>"},{"location":"2024.2/c/#void-ch376_reset_allvoid","title":"void ch376_reset_all(void);","text":"<p>Description</p> <p>reset CH376</p>"},{"location":"2024.2/c/#unsigned-int-ch376_seek_filelong-position","title":"unsigned int ch376_seek_file(long position);","text":"<p>Description</p> <p>Seek file</p> <p>Returns</p> <p>ch376 status values</p>"},{"location":"2024.2/c/#void-ch376_set_addressunsigned-char-adress","title":"void ch376_set_address(unsigned char adress);","text":"<p>Description</p> <p>set usb address</p>"},{"location":"2024.2/c/#void-ch376_set_bytes_writeunsigned-int-nb","title":"void ch376_set_bytes_write(unsigned int nb);","text":""},{"location":"2024.2/c/#void-ch376_set_bytes_readunsigned-int-nb","title":"void ch376_set_bytes_read(unsigned int nb);","text":""},{"location":"2024.2/c/#void-ch376_set_configunsigned-char-config","title":"void ch376_set_config(unsigned char config);","text":"<p>Description</p> <p>set config for usb device</p>"},{"location":"2024.2/c/#void-ch376_set_file_namechar-filename","title":"void ch376_set_file_name(char *filename);","text":"<p>Description</p> <p>set file_name</p>"},{"location":"2024.2/c/#void-ch376_set_usb_addrunsigned-char-adress","title":"void ch376_set_usb_addr(unsigned char adress);","text":"<p>Description</p> <p>set usb_address</p>"},{"location":"2024.2/c/#void-ch376_set_usb_modeunsigned-char-mode","title":"void ch376_set_usb_mode(unsigned char mode);","text":"<p>Description</p> <p>Set usb mode</p> <p>Input</p>"},{"location":"2024.2/c/#void-ch376_set_usb_speedunsigned-char-speed","title":"void ch376_set_usb_speed(unsigned char speed);","text":"<p>Description</p> <p>Set usb mode</p> <p>Input</p>"},{"location":"2024.2/c/#unsigned-char-ch376_wait_responsevoid","title":"unsigned char ch376_wait_response(void);","text":"<p>Description</p> <p>Perform wait_response</p> <p>Returns</p> <p>\"ch376 status\" values</p>"},{"location":"2024.2/c/#void-ch376_wr_usb_datachar-data","title":"void ch376_wr_usb_data(char *data);","text":"<p>Description</p> <p>Send data to usb device. First byte must be the the length to send</p>"},{"location":"2024.2/ch376.inc/","title":"ch376.inc","text":"<p>CH376_LIB_VERSION_2023_4 = $00 CH376_LIB_VERSION_2024_1 = $01 CH376_LIB_VERSION_2024_2 = $02 * CH376_DETECTED           = $AA * CH376_NONE            = $00 CH376_GET_IC_VER      = $01 CH376_SET_BAUDRATE    = $02 CH376_GET_ENTER_SLEEP = $03 CH276_SET_USB_SPEED   = $04 CH376_RESET_ALL       = $05 CH376_CHECK_EXIST     = $06 CH376_GET_REGISTER    = $0A CH376_GET_DEV_RATE    = $0A CH376_SET_REGISTER    = $0B CH376_SET_SD0         = $0B CH376_WRITE_VAR8      = $0B CH376_GET_FILE_SIZE   = $0C ; Get the current file length CH376_READ_VAR32      = $0C CH376_WRITE_VAR32     = $0D CH376_DELAY_100US     = $0F CH376_SET_USB_ADDR    = $13 CH376_SET_USB_MODE    = $15 CH376_TEST_CONNECT    = $16 CH376_ABORT_NAK       = $17 CH376_SET_EP0_RX      = $18 CH376_SET_EP0_TX      = $19 CH376_SET_EP1_RX      = $1A CH376_SET_EP1_TX      = $1B CH376_SET_EP2_RX      = $1C CH376_SET_EP2_TX      = $1D CH376_GET_STATUS      = $22 CH376_UNLOCK_USB      = $23 ; From CH375 datasheet CH376_DIRTY_BUFFER    = $25 CH376_RD_USB_DATA0    = $27 CH376_RD_USB_DATA_UNLOCK = $28 ; From CH375 datasheet CH376_WR_EP0          = $29 ; DATA3 CH376_WR_EP1          = $2A ; DATA5 CH376_WR_EP2          = $2B ; DATA7 CH376_WR_USB_DATA     = $2C CH376_WR_REQ_DATA     = $2D CH376_OFS_DATA        = $2E CH376_SET_FILE_NAME   = $2F CH376_DISK_CONNECT    = $30 ; check the disk connection status CH376_DISK_MOUNT      = $31 CH376_FILE_OPEN       = $32 CH376_FILE_ENUM_GO    = $33 CH376_CMD_FILE_CREATE = $34 CH376_FILE_ERASE      = $35 CH376_FILE_CLOSE      = $36 CH376_DIR_INFO_READ   = $37 CH376_DIR_INFO_SAVE   = $38 CH376_BYTE_LOCATE     = $39 CH376_BYTE_READ       = $3A CH376_BYTE_RD_GO      = $3B CH376_BYTE_WRITE      = $3C CH376_BYTE_WR_GO      = $3D CH376_DISK_CAPACITY   = $3E CH376_DISK_QUERY      = $3F CH376_DIR_CREATE      = $40 CH376_CLR_STALL       = $41 CH376_SET_ADRESS      = $45 CH376_CMD_GET_DESCR   = $46 CH376_CMD_SET_CONFIG  = $49 ; Set USB configuration CH376_SEC_READ        = $4B CH376_SEC_WRITE       = $4C CH376_AUTO_SETUP      = $4D CH376_ISSUE_TKN_X     = $4E ; Send synchronization token and execute transactions CH376_DISC_BOC        = $50 CH376_DISK_INIT       = $51 ; Init USB memory CH376_DISK_RESET      = $52 CH376_DISK_SIZE       = $53 ; Get The maximum capacity of the USB memory CH376_DISC_READ       = $54 CH376_DISK_RD_GO      = $55 CH376_DISK_WRITE      = $56 CH376_DISK_WR_GO      = $57 CH376_DISK_INQUIRY    = $58 CH376_DISK_READY      = $59 CH376_DISK_R_SENSE    = $5A CH376_RD_DISK_SEC     = $5B CH376_WR_DISK_SEC     = $5C CH376_DISK_MAX_LUN    = $5D * ; CODE FOR CH376_SET_USB_MODE * CH376_USB_MODE_DEVICE_INVALID                           = $00 CH376_USB_MODE_DEVICE_OUTER_FW                          = $01 CH376_USB_MODE_DEVICE_INNER_FW                          = $02 CH376_USB_MODE_CODE_SDCARD                              = $03 ; The code of 06H means switch to valid USB-HOST, produce SOF package automatically. CH376_USB_MODE_CODE_USB_HOST_SOF_PACKAGE_AUTOMATICALLY  = $06 CH376_USB_MODE_HOST_RESET                               = $07 * CH376_ERR_OPEN_DIR          = $41 CH376_ERR_MISS_FILE         = $42 CH376_ERR_FOUND_NAME       = $43 CH376_ERR_DISK_DISCON      = $82 CH376_ERR_LARGE_SECTOR         = $84 CH376_ERR_TYPE_ERROR       = $92 CH376_ERR_BPB_ERROR        = $A1 CH376_ERR_DISK_FULL        = $B1 CH376_ERR_FDT_OVER             = $B2 CH376_ERR_FILE_CLOSE       = $B4 * * CH376_USB_INT_SUCCESS      = $14 CH376_USB_INT_CONNECT      = $15 CH376_USB_INT_DISCONNECT   = $16 CH376_USB_INT_BUF_OVER         = $17 CH376_USB_INT_USB_READY    = $18 CH376_USB_INT_DISK_READ    = $1D CH376_USB_INT_DISK_WRITE   = $1E CH376_USB_INT_DISK_ERR         = $1F * CH376_ST_RET_SUCCESS        = $51 CH376_ST_RET_ABORT          = $5F * * * ; / * Informations de base du syst\u00e8me actuel * / ; / * Le bit 6 est utilis\u00e9 pour indiquer la sous-classe du p\u00e9riph\u00e9rique de stockage USB SubClass-Code, le bit 6 est 0 pour indiquer que la sous-classe est 6 et le bit 6 est 1 pour indiquer que la sous-classe est diff\u00e9rente de 6 * / ; / * Le bit 5 est utilis\u00e9 pour indiquer l'\u00e9tat de la configuration USB en mode p\u00e9riph\u00e9rique USB et l'\u00e9tat de la connexion du p\u00e9riph\u00e9rique USB en mode h\u00f4te USB * / ; / * En mode p\u00e9riph\u00e9rique USB, si le bit 5 est 1, la configuration USB est termin\u00e9e et les bits 5 et 0 ne sont pas configur\u00e9s * / ; / * En mode h\u00f4te USB, si le bit 5 est 1, il y a un p\u00e9riph\u00e9rique USB dans le port USB, et si le bit 5 est 0, il n'y a pas de p\u00e9riph\u00e9rique USB dans le port USB * / ; / * Le bit 4 est utilis\u00e9 pour indiquer l'\u00e9tat de verrouillage du tampon en mode p\u00e9riph\u00e9rique USB. Le bit 4 est 1 signifie que le tampon USB est verrouill\u00e9 et le bit 6 est 1 signifie qu'il a \u00e9t\u00e9 lib\u00e9r\u00e9 * / ; / * Autres bits, r\u00e9serv\u00e9s, veuillez ne pas modifier * / VAR_SYS_BASE_INFO           = $20 * ; / * Nombre de tentatives d'op\u00e9ration de transaction USB * / ; / * Si le bit 7 est 0, il ne r\u00e9essayera pas lorsque NAK est re\u00e7u, le bit 7 est 1 et le bit 6 est 0, et r\u00e9essayera \u00e0 l'infini lors de la r\u00e9ception de NAK (vous pouvez utiliser la commande CMD_ABORT_NAK pour abandonner la nouvelle tentative), le bit 7 est 1 et 6 est 1 R\u00e9essayez au plus 3 secondes lors de la r\u00e9ception de NAK * / ; / * Bit 5 ~ Bit 0 repr\u00e9sente le nombre de tentatives apr\u00e8s l'expiration du d\u00e9lai * / VAR_RETRY_TIMES             = $25 * ; / * Indicateur de bit en mode fichier h\u00f4te * / ; / * Bit 1 et Bit 0, l'indicateur du syst\u00e8me de fichiers FAT du disque logique, 00-FAT12, 01-FAT16, 10-FAT32, 11-ill\u00e9gal * / ; / * Bit 2, indique si les donn\u00e9es de la table FAT dans le tampon courant ont \u00e9t\u00e9 modifi\u00e9es, 0-non modifi\u00e9, 1-modifi\u00e9 * / ; / * Bit 3, la longueur du fichier doit \u00eatre modifi\u00e9e, le fichier actuel est ajout\u00e9 avec les donn\u00e9es, 0-Aucune modification n'est pas ajout\u00e9e, 1-Ajout\u00e9 et doit \u00eatre modifi\u00e9 * / ; / * Autres bits, r\u00e9serv\u00e9s, veuillez ne pas modifier * / VAR_FILE_BIT_FLAG           = $26 * ; / * \u00c9tat du disque et du fichier en mode fichier h\u00f4te * / ; VAR_SD_BIT_FLAG 0x30 / * Indicateur de bit de la carte SD en mode fichier h\u00f4te * / ; / * Bit 0, version de la carte SD, 0- prend uniquement en charge la premi\u00e8re version SD, 1- prend en charge la deuxi\u00e8me version SD * / ; / * Bit 1, reconnaissance automatique, carte 0-SD, carte 1-MMC * / ; / * Bit 2, identification automatique, carte SD de capacit\u00e9 standard 0, carte SD 1 grande capacit\u00e9 (HC-SD) * / ; / * Bit 4, d\u00e9lai d'expiration de la commande ACMD41 * / ; / * Bit 5, d\u00e9lai d'expiration de la commande CMD1 * / ; / * Bit 6, d\u00e9lai d'expiration de la commande CMD58 * / ; / * Autres bits, r\u00e9serv\u00e9s, veuillez ne pas modifier * / VAR_DISK_STATUS             = $2B * ; / * L'indicateur de synchronisation du point de terminaison BULK-IN / BULK-OUT du p\u00e9riph\u00e9rique de stockage USB * / ; / * Bit 7, indicateur de synchronisation de point de terminaison en bloc * / ; / * Bit 6, indicateur de synchronisation de point de terminaison en bloc * / ; / * Bit 5 ~ Bit 0, doit \u00eatre 0 * / VAR_UDISK_TOGGLE            = $31 * ; / * Le num\u00e9ro d'unit\u00e9 logique du p\u00e9riph\u00e9rique de stockage USB * / ; / * Bit 7 ~ Bit 4, le num\u00e9ro d'unit\u00e9 logique actuel du p\u00e9riph\u00e9rique de stockage USB, apr\u00e8s que CH376 initialise le p\u00e9riph\u00e9rique de stockage USB, la valeur par d\u00e9faut est d'acc\u00e9der \u00e0 0 # unit\u00e9 logique * / ; / * Bit 3 ~ Bit 0, le num\u00e9ro d'unit\u00e9 logique maximum du p\u00e9riph\u00e9rique de stockage USB, plus 1 est \u00e9gal au nombre d'unit\u00e9s logiques * / VAR_UDISK_LUN               = $34 * ; / * Le nombre de secteurs par cluster du disque logique * / VAR_SEC_PER_CLUS            = $38 ; / * Le num\u00e9ro d'index des informations de r\u00e9pertoire de fichiers en cours dans le secteur * / VAR_FILE_DIR_INDEX          = $3B * ; / * Le d\u00e9calage de secteur du pointeur de fichier actuel dans le cluster, 0xFF pointe vers la fin du fichier, la fin du cluster * / VAR_CLUS_SEC_OFS            = $3C * ;/ * Variable 32 bits / 4 octets * / ; / * Pour les disques FAT16, c'est le nombre de secteurs occup\u00e9s par le r\u00e9pertoire racine, et pour les disques FAT32, c'est le num\u00e9ro de cluster de d\u00e9part du r\u00e9pertoire racine (longueur totale 32 bits, octet de poids faible en premier) * / VAR_DISK_ROOT               = $44 * ; / * Le nombre total de clusters du disque logique (la longueur totale est de 32 bits, octet de poids faible en premier) * / VAR_DSK_TOTAL_CLUS          = $48 * ; / * Le num\u00e9ro de secteur absolu de d\u00e9part du disque logique LBA (longueur totale 32 bits, octet de poids faible en premier) * / VAR_DSK_START_LBA           = $4C * ; / * LBA de d\u00e9part de la zone de donn\u00e9es du disque logique (la longueur totale est de 32 bits, octet de poids faible en premier) * / VAR_DSK_DAT_START           = $50 * ; / * LBA correspondant aux donn\u00e9es du tampon de donn\u00e9es actuel du disque (longueur totale 32 bits, octet de poids faible en premier) * / VAR_LBA_BUFFER              = $54 * ; / * L'adresse LBA de d\u00e9part du disque actuellement lu et \u00e9crit (la longueur totale est de 32 bits, octet de poids faible en premier) * / VAR_LBA_CURRENT             = $58 * ; / * L'adresse LBA du secteur o\u00f9 se trouvent les informations du r\u00e9pertoire de fichiers en cours (longueur totale 32 bits, octet de poids faible en premier) * / VAR_FAT_DIR_LBA             = $5C * ; / * Le num\u00e9ro de cluster de d\u00e9part du fichier ou du r\u00e9pertoire (dossier) actuel (longueur totale 32 bits, octet de poids faible en premier) * / VAR_START_CLUSTER           = $60 * ; / * Le num\u00e9ro de cluster actuel du fichier actuel (la longueur totale est de 32 bits, octet de poids faible en premier) * / VAR_CURRENT_CLUST           = $64 * ; / * La longueur du fichier actuel (la longueur totale est de 32 bits, octet de poids faible en premier) * / VAR_FILE_SIZE               = $68 * ; / * Le pointeur de fichier actuel, le d\u00e9calage d'octet de la position actuelle de lecture et d'\u00e9criture (longueur totale 32 bits, octet de poids faible en premier) * /  *VAR_CURRENT_OFFSET          = $6C</p>"}]}